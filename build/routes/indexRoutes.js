"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const node_fetch_1 = __importDefault(require("node-fetch"));
class IndexRoutes {
    constructor() {
        this.router = (0, express_1.Router)();
        this.routes();
    }
    createPost(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            console.log("--- Starting Process  --- ");
            //const apiUrl:string = "https://consultar-persona.bup.qas.cloud.gentera.com.mx/bup/v0.2/consultar-persona/id/201698266?esta_activa=true&key=AIzaSyAymk-YohlfNzPfmgfBKwaUtZ5PhvsoWCo";
            const headerdata = {
                'idpais': '1',
                'idempresa': '1',
                'idsistema': '33',
                'traceid': '684bbfbe-c2c3-459e-82e7-984d79586637',
                'x-mask-confidential-values': 'true',
                'Content-Type': 'application/json'
            };
            //LEGO-CONTACTO-DIRECCION-POST-OK
            /*        const bodyData ={
                        "datosContactoDireccion": [
                            {
                                "calle": "BLVR. JOSE MARIA PINO SUAREZ",
                                "noExterior": "2000",
                                "noInterior": "SN",
                                "idCodigoPostal": 12909,
                                "idColonia": 63267,
                                "idDelegacionMunicipio": 772,
                                "idCiudadLocalidad": 10576,
                                "idEntidadFederativa": 15,
                                "idPais": 1,
                                "idTipo": 1,
                                "latitud": -342.2367,
                                "longitud": 77.18453,
                                "entreCalle1": "CHICAHUALCO",
                                "entreCalle2": "MITLA",
                                "referenciaUbicacion": "AVENIDA JOSE MARIA"
                            }
                        ]
                    };
            */
            //LEGO-CUENTAOTROBANCO-POST-MIN-REQ
            const bodyData = {
                "cuentaOtroBanco": {
                    "cuentaTercera": "4152313482818551",
                    "idBancoDestino": 12,
                    "indMedioPreferente": true,
                    "idMoneda": 1
                }
            };
            //LEGO-CONTACTO-EMAIL-POST
            /*        const bodyData ={
                        "datosContactoEmail": {
                            "correo": "TAE_TEST002@YOPMAIL.COM"
                        }
                    };
            */
            //let  array:number[] = [201697370,201697372,201697371,201697373,201697378,201697374,201697375,201697377,201697376,201697388,201697389,201697405,201697409,201697426,201697430,201697435,201697437,201697441,201697449,201697455,201697537,201697578,201697589,201697648,201697656,201697683,201697381,201697382,201697403,201697413,201697416,201697418,201697419,201697448,201697457,201697462,201697463,201697469,201697474,201697479,201697484,201697491,201697500,201697509,201697519,201697544,201697551,201697552,201697555,201697560,201697562,201697570,201697572,201697577,201697591,201697590,201697595,201697601,201697607,201697383,201697395,201697393,201697398,201697424,201697427,201697432,201697434,201697439,201697442,201697453,201697475,201697483,201697487,201697489,201697493,201697504,201697506,201697514,201697518,201697520,201697525,201697536,201697543,201697596,201697603,201697610,201697611,201697615,201697621,201697625,201697630,201697636,201697640,201697651,201697655,201697662,201697663,201697664,201697666,201697669,201697675,201697384,201697387,201697390,201697399,201697404,201697407,201697414,201697412,201697421,201697422,201697446,201697454,201697459,201697460,201697464,201697467,201697473,201697480,201697481,201697495,201697496,201697498,201697501,201697505,201697528,201697529,201697532,201697534,201697535,201697539,201697545,201697546,201697553,201697556,201697563,201697565,201697568,201697573,201697574,201697576,201697579,201697580,201697587,201697592,201697597,201697606,201697613,201697617,201697620,201697626,201697628,201697379,201697386,201697392,201697394,201697397,201697400,201697402,201697410,201697433,201697436,201697438,201697444,201697458,201697452,201697466,201697482,201697492,201697494,201697507,201697512,201697513,201697524,201697531,201697533,201697547,201697583,201697593
            //]
            let array = [201697614, 201697616, 201697627, 201697633, 201697641, 201697645, 201697658, 201697659, 201697661, 201697667, 201697671, 201697380, 201697385, 201697423, 201697470, 201697472, 201697476, 201697485, 201697490, 201697499, 201697508, 201697510, 201697527, 201697548, 201697549, 201697550, 201697554, 201697557, 201697558, 201697559, 201697561, 201697564, 201697566, 201697569, 201697567, 201697571, 201697582, 201697594, 201697602, 201697605, 201697608, 201697612, 201697619, 201697624, 201697629, 201697639, 201697643, 201697646, 201697650, 201697654, 201697665, 201697676, 201697677, 201697687, 201697688, 201697698, 201697705, 201697710, 201697714, 201697718, 201697391, 201697396, 201697401, 201697406, 201697408, 201697411, 201697415, 201697420, 201697425, 201697428, 201697429, 201697440, 201697443, 201697445, 201697450, 201697456, 201697461, 201697465, 201697468, 201697471, 201697477, 201697478, 201697488, 201697497, 201697502, 201697503, 201697511, 201697517, 201697515, 201697521, 201697523, 201697526, 201697530, 201697540, 201697538, 201697541, 201697575, 201697581, 201697585, 201697586, 201697588, 201697598, 201697604, 201697609, 201697618, 201697623, 201697647, 201697649, 201697678, 201697417, 201697431, 201697447, 201697451, 201697486, 201697516, 201697522, 201697542, 201697584, 201697600, 201697642, 201697670, 201697684, 201697622, 201697632, 201697634, 201697638, 201697660, 201697672, 201697673, 201697674, 201697680, 201697689, 201697690, 201697692, 201697695, 201697696, 201697697, 201697700, 201697701, 201697703, 201697704, 201697706, 201697707, 201697708, 201697709, 201697712, 201697713, 201697716, 201697717, 201697719, 201697721, 201697631, 201697635, 201697637, 201697644, 201697652, 201697653, 201697657, 201697668, 201697681, 201697679, 201697682, 201697685, 201697686, 201697691, 201697693, 201697694, 201697699, 201697702, 201697711, 201697715, 201697720, 201697722, 201697723, 201697724, 201697725, 201697726, 201697727, 201697728, 201697729, 201697730, 201697731, 201697732, 201697733, 201697734, 201697735, 201697736, 201697741, 201697746, 201697751, 201697752, 201697753, 201697755, 201697758, 201697760, 201697762, 201697764, 201697769, 201697768, 201697775, 201697780, 201697783, 201697782, 201697786, 201697792, 201697793, 201697796, 201697804, 201697806, 201697815, 201697737, 201697740, 201697742, 201697743, 201697745, 201697759, 201697756, 201697763, 201697738, 201697744, 201697748, 201697750, 201697754, 201697757, 201697765, 201697772, 201697773, 201697776, 201697781, 201697784, 201697794, 201697799, 201697803, 201697805, 201697813, 201697739, 201697747, 201697761, 201697767, 201697770, 201697771, 201697774, 201697777, 201697778, 201697749, 201697766, 201697785, 201697790, 201697807, 201697812, 201697814, 201697779, 201697787, 201697797, 201697801, 201697800, 201697808, 201697810, 201697817, 201697819, 201697820, 201697788, 201697798, 201697802, 201697809, 201697811, 201697818, 201697789, 201697791, 201697795, 201697816, 201697821, 201697822, 201697823, 201697824, 201696183, 201696200, 201696201, 201696202, 201696207, 201696218, 201696224, 201696252, 201696263, 201696268, 201696203, 201696205, 201696204, 201696213, 201696220, 201696225, 201696236, 201696241, 201696206, 201696226, 201696235, 201696244, 201696267, 201696289, 201696293, 201696295, 201696298, 201696303, 201696223, 201696238, 201696253, 201696273, 201696269, 201696212, 201696324, 201696364, 201696384, 201696421, 201696422, 201696427, 201696428, 201696432, 201696434, 201696435, 201696437, 201696403, 201696404, 201696405, 201696412, 201696413, 201696419, 201696420, 201696423, 201696429, 201696430, 201696436, 201696438, 201696410, 201696414, 201696433, 201696449, 201696453, 201696466, 201696479, 201696482, 201696486, 201696505, 201696520, 201696542, 201696552, 201696557, 201696572, 201696582, 201696599, 201696603, 201696604, 201696605, 201696609, 201696611, 201696617, 201696618, 201696620, 201696621, 201696623, 201696629, 201696638, 201696641, 201696639, 201696640, 201696634, 201696635, 201696685, 201696688, 201696691, 201696701, 201696649, 201696651, 201696652, 201696658, 201696657, 201696637, 201696660, 201696704, 201696738, 201696741, 201696745, 201696755, 201696760, 201696768, 201696789, 201696812, 201696822, 201696827, 201696850, 201697051, 201697055, 201697058, 201696779, 201696785, 201696799, 201696807, 201696817, 201696832, 201696848, 201696866, 201696870, 201696905, 201696966, 201696970, 201696975, 201697003, 201697047, 201696855, 201696926, 201696939, 201696954, 201696968, 201697001, 201697016, 201697059, 201696960, 201696962, 201696971, 201696984, 201696989, 201696993, 201696994, 201696995, 201696997, 201697004, 201697005, 201697023, 201697024, 201697027, 201697030, 201697035, 201697038, 201697086, 201697074, 201697093, 201697068, 201697081, 201697078, 201697087, 201697088, 201697091, 201697067, 201697079, 201697083, 201697089, 201696255, 201696261, 201696279, 201696287, 201696299, 201696301, 201696304, 201696306, 201696316, 201696318, 201696323, 201696328, 201696331, 201696332, 201696333, 201696336, 201696345, 201696349, 201696357, 201696366, 201696371, 201696376, 201696377, 201696391, 201696388, 201696308, 201696312, 201696315, 201696319, 201696320, 201696325, 201696337, 201696339, 201696340, 201696342, 201696344, 201696348, 201696356, 201696359, 201696360, 201696362, 201696365, 201696368, 201696370, 201696378, 201696382, 201696386, 201696389, 201696393, 201696440, 201696471, 201696472, 201696483, 201696487, 201696492, 201696497, 201696500, 201696503, 201696512, 201696519, 201696522, 201696527, 201696529, 201696534, 201696537, 201696538, 201696544, 201696545, 201696558, 201696563, 201696571, 201696576, 201696587, 201696588, 201696442, 201696452, 201696455, 201696456, 201696459, 201696462, 201696469, 201696478, 201696477, 201696484, 201696485, 201696493, 201696495, 201696502, 201696504, 201696506, 201696513, 201696523, 201696525, 201696526, 201696528, 201696530, 201696536, 201696541, 201696548, 201696551, 201696570, 201696580, 201696589, 201696613, 201696614, 201696674, 201696680, 201696682, 201696687, 201696690, 201696692, 201696693, 201696713, 201696737, 201696786, 201696787, 201696788, 201696806, 201696808, 201696825, 201696833, 201696838, 201696842, 201696854, 201696858, 201696859, 201696861, 201696863, 201696865, 201696867, 201696868, 201696874, 201696877, 201696878, 201696881, 201696882, 201696885, 201696892, 201696893, 201696895, 201696900, 201696903, 201696906, 201696908, 201696912, 201696924, 201696925, 201696930, 201696931, 201696934, 201696945, 201696946, 201696947, 201696948, 201696949, 201696950, 201696717, 201696724, 201696725, 201696770, 201696771, 201696774, 201696777, 201696783, 201696803, 201696813, 201696828, 201696830, 201696836, 201696869, 201696872, 201696879, 201696904, 201696938, 201696940, 201696944, 201696951, 201696963, 201696965, 201696972, 201696974, 201696991, 201696996, 201697018, 201697036, 201697037, 201697046, 201697061, 201696662, 201696666, 201696670, 201696681, 201696683, 201696702, 201696722, 201696720, 201696723, 201696736, 201696739, 201696743, 201696751, 201696754, 201696762, 201696763, 201696769, 201696776, 201696784, 201696811, 201696823, 201696840, 201696846, 201697054, 201697044, 201697045, 201697159, 201697160, 201697161, 201697164, 201697165, 201697166, 201697173, 201697170, 201697174, 201697179, 201697184, 201697183, 201697185, 201697188, 201697193, 201697203, 201697205, 201697207, 201697212, 201697214, 201697211, 201697216, 201697219, 201697222, 201697224, 201697228, 201697226, 201697230, 201697227, 201697234, 201697241, 201697260, 201697265, 201697270, 201697288, 201697294, 201697293, 201697291, 201697301, 201697303, 201697306, 201697305, 201697309, 201697310, 201697314, 201697325, 201697326, 201697330, 201697335, 201697336, 201697334, 201697337, 201697339, 201697341, 201697347, 201697349, 201697360, 201697365, 201697367, 201697162, 201697190, 201697191, 201697194, 201697198, 201697197, 201697202, 201697206, 201697208, 201697209, 201697213, 201697217, 201697218, 201697220, 201697221, 201697246, 201697247, 201697250, 201697254, 201697255, 201697251, 201697257, 201697259, 201697262, 201697261, 201697264, 201697267, 201697272, 201697273, 201697276, 201697311, 201697312, 201697315, 201697328, 201697354, 201697352, 201697363, 201697364, 201697368, 201697163, 201697167, 201697171, 201697176, 201697175, 201697178, 201697182, 201697180, 201697189, 201697195, 201697200, 201697199, 201697201, 201697215, 201697225, 201697236, 201697243, 201697249, 201697252, 201697258, 201697269, 201697278, 201697279, 201697281, 201697277, 201697283, 201697285, 201697290, 201697297, 201697299, 201697298, 201697302, 201697304, 201697307, 201697316, 201697318, 201697321, 201697322, 201697324, 201697329, 201697344, 201697348, 201697351, 201697359, 201697168, 201697169, 201697172, 201697177, 201697181, 201697186, 201697187, 201697196, 201697192, 201697204, 201697210, 201697223, 201697231, 201697232, 201697229, 201697233, 201697237, 201697239, 201697244, 201697245, 201697256, 201697253, 201697271, 201697275, 201697280, 201697286, 201697287, 201697296, 201697308, 201697332, 201697338, 201697342, 201697345, 201697353, 201697356, 201697235, 201697240, 201697274, 201697300, 201697317, 201697320, 201697323, 201697327, 201697331, 201697340, 201697350, 201697358, 201697361, 201697366, 201697238, 201697242, 201697248, 201697263, 201697266, 201697268, 201697282, 201697284, 201697289, 201697292, 201697295, 201697319, 201697333, 201697343, 201697346, 201697355, 201697362, 201697313, 201697357, 201697369];
            //let  array:number[] = [201697370,201697372,201697371,201697373,201697378];
            let counter = 0;
            let heigh = array.length;
            console.log(`Número de registros: ${heigh}`);
            /*        for(let counter of array){
                        let value = array[counter];
                        console.log(`Id Persona: ${array[counter]}`);
                    }
            */
            while (counter < heigh) {
                //LEGO-CONTACTO-DIRECCION-POST-OK
                ///const apiUrl  = `https://contacto-persona.bup.qas.cloud.gentera.com.mx/bup/v0.1/direccion/persona/${array[counter]}?key=AIzaSyAymk-YohlfNzPfmgfBKwaUtZ5PhvsoWCo`;
                //LEGO-CUENTAOTROBANCO-POST-MIN-REQ
                const apiUrl = `https://cuenta-otro-banco.bup.dev.cloud.gentera.com.mx/bup/v0.1/datos-cuenta-otro-banco/${array[counter]}?key=AIzaSyDZ9RbizJfAIUkJz7wS35w5nktBng5i6OU`;
                //LEGO-CONTACTO-EMAIL-POST
                ///const apiUrl  = `https://contacto-persona.bup.dev.cloud.gentera.com.mx/bup/v0.1/email/persona/${array[counter]}?key=AIzaSyDZ9RbizJfAIUkJz7wS35w5nktBng5i6OU`;
                console.log(apiUrl);
                const response = yield (0, node_fetch_1.default)(apiUrl, {
                    method: "POST",
                    headers: headerdata,
                    body: JSON.stringify(bodyData)
                });
                const data = yield response.json();
                console.log(data);
                counter++;
            }
            console.log("--- End Process  --- ");
            res.json('Proceso Finalizado');
        });
    }
    routes() {
        //this.router.get('/',(req, res) => res.send('Bienvenidos amigos'))
        //this.router.get('/',this.getPosts);
        this.router.post('/APICargaDomicilios', this.createPost);
    }
}
const indexRoutes = new IndexRoutes();
indexRoutes.routes();
exports.default = indexRoutes.router;
